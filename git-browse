#!/bin/sh
# ---
# Copyright (c) 2022 Alex Blewitt
#
# Released under the MIT License SPDX:MIT
# See LICENSE.txt for more information
# ---
# Opens up the current commit in a web browser
#
# Redirects to GitHub where possible for known sites.
#
# Usage:
#
#   git browse
#   git browse master
#   BROWSER=firefox git browse HEAD^

set -eou pipefail

file_or_commit=${1:-HEAD}

if [ -e "${file_or_commit}" ]; then
  file=${file_or_commit}
  full=$(pwd)/$file
  root=$(git rev-parse --show-toplevel)
  file=${full#${root}}
  commit=$(git rev-parse HEAD)
else
  file=""
  commit=$(git rev-parse "${file_or_commit}")
fi

url=$(git remote -v | awk -v file="${file}" -v commit="${commit}" -- '/origin/ && /fetch/ {
  url = $2
  gsub(":[0-9]+/", "/", url)
  gsub("ssh://.*@", "https://", url)
  gsub("git@github.com:", "https://github.com/", url)
  gsub("git@", "https://", url)
  gsub(".git$", "", url)
  gsub("https://git.eclipse.org/[a-z]+/", "https://github.com/eclipse/", url)
  if (length(file)) {
    if (index(url, "github.")) {
      url = url "/blob/" commit "/" file
    } else if (index(url, "gitlab.")) {
      url = url "/-/blob/" commit "/" file
    }
  } else if (length(commit)) {
    if (index(url, "github.")) {
      url = url "/commit/" commit
    } else if (index(url, "gitlab.")) {
      url = url "/-/commit/" commit
    }
  }
  print url
}')

# Having found the URL, open it in a browser.
#
# The browser command may be specified with a BROWSER= variable
#   BROWSER=firefox git browse
#
# On macOS, the `open` command will open a URL in the default browser
# On other platforms, the Python webbrowser module will do the same
# On some Linux versions, xdg-open will open the URL
# If not, print out a message with the and then exit

if [ -n "${BROWSER:-}" ]
then
	"${BROWSER}" "${url}"
elif [ "Darwin" = "$(uname)" ]
then
	open "${url}"
elif which -s python
then
	python -m webbrowser "${url}"
elif which -s xdg-open
then
	xdg-open "${url}"
else
	echo "Unable to find a browser for your platform"
	echo "Please set the BROWSER variable to an executable that can open URLs"
	echo "${url}"
fi
